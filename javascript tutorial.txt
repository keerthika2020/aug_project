create a folder in file explorer
open it in vs 
create a folder javascript
create a variable.html file
type html chose 2 one
inside head write script we write all the code inside this only
 var myName = "Your name";
        console.log(myName);
golive click
website > rightclick> inspect >consol
# inside the terminal
node -v 
PS C:\Users\Dell Latitude 7410\javascript tutorial> npx create-react-app app
# react router for 
localhost:8080/home->homepage
localhost:8080/about->aboutpage

# to implement the routing in our vs
npm install react-router-dom # always need this!
# config 
const router = createBrowserRouter([{"path":"home",element:<Home/>},{"path":"about",element:<About/>}
]);

# to check react app 
cd app
ls
see for package.jason
npm install react-router-dom 

create 2 file in app > src>  folder(Home.js, About.js)
function Home(){
    return(
        <h1>
        this is homepage
        </h1>
    )
};

export default Home;

function About(){
    return(
        <h1>
        this is homepage
        </h1>
    )
};

export default About;

now open app.js  12 th line before fn app()
const config = createBrowserRouter([
  {path:"/home",element: <Home/>},
  {path:"/about",element: <About/>}
]);

3,4,5
import Home from './Home';
import {createBrowserRouter,RouterProvider} from 'react-router-dom';
import {About} from './About';

code:
App.js
import './App.css';
import Home from './Home';
import About from './About';



function App() {
  const getUser=async()=>{
    let res=await fetch('https://reqres.in/api/users/2');
    let serverres=await res.json();
    console.log(serverres['data']);
  }
  return (
    <div>
      <Home/>
      <About/>
      <button onClick={getUser}>Click to get user list</button>
    </div>
  );
}

export default App;


Home.js
function Home(){
    return(
        <h1>this is home page</h1>
    )
};
export default Home;

About.js
function About(){
    return(
        <h1>this is About page</h1>
    )
};
export default About;




8.8.24
<!-- comments in html
     inline element   width of the content only taken can only contain inline element
     block element   takes the full width even though the content is small can contain both inline and block ele
     inline into a block and viceversa be changed
     <form>tags => action , method 
        action = send data to server
        method = 
    -->
we can send to server without form tag using javascript 
<select> tage to display drop down
<option >tage will display our choices
<option>tag has value properties/attrikbutes which is used to 
<input type="submit"> will send our input to server
<a> anchor tag =
<li>list
<ol> ordered <ul> unorded
#all gives the same output
<header>  
<section>
<footer>
<div> inside this we can a section

<video controls>
    <!-- to increase, decrease volumn, pause, start, resume then only our video will
    have those controls-->
    <source src="video url"/> 
     <!-- we need mp4 vedio to use youtube video-->
</video>
<audio controls>
    <!-- to increase, decrease volumn, pause, start, resume then only our audio will
    have those controls-->
    <source src="audio url"/> 
     <!-- we need mp3 audio -->
</audio>
developer tool> in a html write a h1 and inspect > elements> go change the text
it will reflect on the web page when we refresh but this is only temporary

attributes:

class    it can have n no of classes for a particular element
many elements can have same class name and can have duplicate . for class name
id     identity and unique for an element # for id
each element must have unique id 
<div id ="olo">
<div id= "jai">
<p> has next line space
<article> will not have newline space and continue in nextline
text area resizeable can type multiple lines
input box not resizable can type only one line

git init
git add .
git commit -m "initial commit"
git config --global user.email "keerthika.r2122@gmail.com"
git config --global user.name "keerthika"
give the code in your git hub code
git push -u origin master
# if you add a file then do this
git add .
 git status
git commit -m "file added"
git push -u origin master

# day 4 12/8/24
visibility hidden just hids the element but keeps the space occupied by the element
display none removes element along with its space
both hids elements
flex direction either horiz or verti according to the device like lap and mobile ie row and col
display flex
class    it can have n no of classes for a particular element
many elements can have same class name and can have duplicate . for class name
id     identity and unique for an element # for id
each element must have unique id 
tag name: use css properties
parent and child selector:
property override to find error
 <style>
    h1{
                background-color: red;
            }
    .div1 h1{
                background-color: rgb(30, 255, 221);
            }
    h2{
        color:pink ;
    }
    .s1 h2{
        color: blue;
    }

    </style>
</head>
<body>
    <div class="div1">
       <h1>barath </h1> 
    </div>
    <div class="div2">
        <h1>
            zindabad
        </h1>
    </div>
    <section class="s1">
        <h2>jai ho</h2>
    </section>
    <section class="s2">
        <h2>keerthika</h2>
    </section>
</body>
to change the list of items into horiz or vertical
display in lineblock 
display flex

day 5 13/08/24
let var const differences
javascript usecases
let will not allow same variable names for two values 
redeclaration is not posibble but updation is possible
const  will not allow same variable names for two values 
redeclaration and updation is not posibble  
first head runs and then then the body will run and then script will run so we write script tag in body and not in head
event handling 
onclick in the element

day 6 14.08.24
advanced js 
es6 
arrow fn or anonymus function
function print(){
}
document.getElementById().addEventListner('click', () =>{
})
# the fn is called automatically without calling the print()
example:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script>
        function print(){

        }
    </script>
</head>
<body>
    <input type="text" id = "tid"/>
    <button id = "bid">click</button></br></br>
    <select id="fruits">
        <option value="select">Select options</option>
        <option value="Apple">Apple</option>
        <option value="Mango">Mango</option>
        <option value="Orange">Orange</option>
        <option value="Grapes">Grapes</option>
    </select>
</body>
<script>
    document.getElementById("bid").addEventListener('click',()=>{
        let val = document.getElementById("tid").value;
        console.log(val);
    })
    // use this code or the below one 
    //document.getElementById("fruits").addEventListener('change',()=>{
       // let val1 = document.getElementById("fruits").value;
        //console.log(val1)
    //})
    //access value and handle event 
    document.getElementById("fruits").addEventListener('change',(e)=>{
                console.log(e.target.value);
    })
</script>
</html>

es6 filter in javascript
filter()= only works with array for iteration 
filters based on cond
map() // using map we can iterate each element and do manipulations on them
goes through each and every element and do changes to the element
both filter and map will create new array without modifying source array
# chainning methods
to filter even no and then multiply them by 2 
perform server api integration in js
using fetch method and then given 
javascript promise: fn has to return something ie either success or failure instead of just execution
we dont know when it'll return  promise will wait untill it gets a response 
by default get method is taken if we didn't use fetch 
whenever we use await we use async
status code in api in javascript 
100-199 information response
200-299 successful responses
300-399 redirection  messages
400-499 server is fine but client side error occures
500-599 internal server has some errors issues but your data is correct
http :
to integrate an api in http
server team has to confirm this three 
api url 
the http method
what type of data is shared 
JSON.stringify to convert json file to json string
when we use post method it is mandatory to tell the server that what type of data we are passing
to the server by using http headers .





















